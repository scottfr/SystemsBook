[{"title": "Interactive Sensitivity Testing"},"Let's illustrate the usage of sensitivity testing using our rabbit example. First we will construct a simple exponential growth model.",{"geometry":{"x":250,"y":330,"width":100,"height":40},"name":"Rabbits","create":"Stock"},{"attribute":"InitialValue","target":"Rabbits","value":"12"},{"geometry":{"x":0,"y":0,"width":100,"height":100,"sourcePoint":{"x":300,"y":110},"targetPoint":{"x":0,"y":100}},"alpha":null,"omega":"Rabbits","name":"Births","create":"Flow"},{"geometry":{"x":400,"y":150,"width":120,"height":50},"name":"Birth Rate","create":"Variable"},{"attribute":"Equation","target":"Birth Rate","value":"0.05"},{"geometry":{"x":0,"y":0,"width":100,"height":100},"alpha":"Birth Rate","omega":"Births","create":"Link"},{"attribute":"FlowRate","target":"Births","value":"[Birth Rate]*[Rabbits]"},"DIAGRAM","This is the basic outline for the model. We assume a fixed value of 12 rabbits and a fixed birth rate of 0.05.","RESULTS","When we simulate we obtain the same results each time.",{"attribute":"InitialValue","target":"Rabbits","value":"RandTriangular(6, 18, 12)"},"Now, let's try to incorporate uncertainty. Given that we know that there can be between 6 and 18 rabbits initially with an expected value of 12, we can use the *RandTriangular()* function to model this.",{"attribute":"value","target":"Birth Rate","value":"RandLogNormal(0.05, 0.03)"},"We also do not know the birth rate with certainty. We know, however, that the rate must be greater than 0, and lets say we can assume the expected value is 0.05. We can use the *RandLogNormal()* function to model this type of uncertainty.","RESULTS","RESULTS","RESULTS","Now, we can simulate this mode a few times and see that each time we run the simulation we get a different result.","We can now use sensitivity testing to see the range of results given this specified uncertainty. We'll do 100 runs of the model and aggregate the results to see the expected distribution",{"cmd": "sensitivityProgress = Ext.MessageBox.show({msg:getText('Running Sensitivity Analysis...'),icon:'run-icon',width:300, closable:false, modal:true, progress:true, progressText:' '}); sensitivityController = {nRuns: 100, items: [getID(findName('Rabbits'))], bounds: [50, 80, 95, 100], showRuns: false, results: [], noYield: true}; runSensitivity(); "},"DATA","We can readily see the range of results allowing us to make decisions incorporating our known uncertainty about parameter values. "]