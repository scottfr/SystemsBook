[{"title": "Agents Interacting", "description": "This example shows how agents can interact with each other using the Find functions."},{"load": "<mxGraphModel>  <root>    <mxCell id=\"0\"\/>    <mxCell id=\"1\" parent=\"0\"\/>    <Folder name=\"Person\" Note=\"\" Type=\"Agent\" Image=\"None\" FlipHorizontal=\"false\" FlipVertical=\"false\" LabelPosition=\"Middle\" id=\"28\">      <mxCell style=\"folder\" vertex=\"1\" parent=\"1\">        <mxGeometry x=\"450\" y=\"100\" width=\"140\" height=\"320\" as=\"geometry\"\/>      <\/mxCell>    <\/Folder>    <State name=\"Healthy\" Note=\"\" Active=\"True\" Image=\"None\" FlipHorizontal=\"false\" FlipVertical=\"false\" LabelPosition=\"Middle\" id=\"23\">      <mxCell style=\"state\" parent=\"28\" vertex=\"1\">        <mxGeometry x=\"20\" y=\"20\" width=\"100\" height=\"40\" as=\"geometry\"\/>      <\/mxCell>    <\/State>    <State name=\"Infected\" Note=\"\" Active=\"false\" Image=\"None\" FlipHorizontal=\"false\" FlipVertical=\"false\" LabelPosition=\"Middle\" id=\"24\">      <mxCell style=\"state\" parent=\"28\" vertex=\"1\">        <mxGeometry x=\"20\" y=\"140\" width=\"100\" height=\"40\" as=\"geometry\"\/>      <\/mxCell>    <\/State>    <State name=\"Recovered\" Note=\"\" Active=\"false\" Image=\"None\" FlipHorizontal=\"false\" FlipVertical=\"false\" LabelPosition=\"Middle\" id=\"25\">      <mxCell style=\"state\" parent=\"28\" vertex=\"1\">        <mxGeometry x=\"20\" y=\"260\" width=\"100\" height=\"40\" as=\"geometry\"\/>      <\/mxCell>    <\/State>    <Transition name=\"Infection\" Note=\"\" Trigger=\"Probability\" Value=\"0.3\" Units=\"Unitless\" MaxConstraintUsed=\"false\" MinConstraintUsed=\"false\" MaxConstraint=\"100\" MinConstraint=\"0\" ShowSlider=\"false\" SliderMax=\"100\" SliderMin=\"0\" SliderStep=\"\" id=\"26\">      <mxCell style=\"transition\" parent=\"28\" source=\"23\" target=\"24\" edge=\"1\">        <mxGeometry x=\"-450\" y=\"-100\" width=\"100\" height=\"100\" as=\"geometry\">          <mxPoint x=\"-450\" as=\"sourcePoint\"\/>          <mxPoint x=\"-350\" y=\"-100\" as=\"targetPoint\"\/>        <\/mxGeometry>      <\/mxCell>    <\/Transition>    <Transition name=\"Recovery\" Note=\"\" Trigger=\"Probability\" Value=\"0.2\" Units=\"Unitless\" MaxConstraintUsed=\"false\" MinConstraintUsed=\"false\" MaxConstraint=\"100\" MinConstraint=\"0\" ShowSlider=\"false\" SliderMax=\"100\" SliderMin=\"0\" SliderStep=\"\" id=\"27\">      <mxCell style=\"transition\" parent=\"28\" source=\"24\" target=\"25\" edge=\"1\">        <mxGeometry x=\"-450\" y=\"-100\" width=\"100\" height=\"100\" as=\"geometry\">          <mxPoint x=\"-450\" as=\"sourcePoint\"\/>          <mxPoint x=\"-350\" y=\"-100\" as=\"targetPoint\"\/>        <\/mxGeometry>      <\/mxCell>    <\/Transition>    <Setting Note=\"\" Version=\"28\" TimeLength=\"20\" TimeStart=\"0\" TimeStep=\"1\" TimeUnits=\"Years\" StrictUnits=\"true\" Units=\"\" HiddenUIGroups=\"Validation,User Interface\" SolutionAlgorithm=\"RK1\" BackgroundColor=\"white\" Throttle=\"1\" Macros=\"\" SensitivityPrimitives=\"\" SensitivityRuns=\"50\" SensitivityBounds=\"50, 80, 95, 100\" SensitivityShowRuns=\"false\" id=\"2\">      <mxCell parent=\"1\" vertex=\"1\" visible=\"0\">        <mxGeometry x=\"20\" y=\"20\" width=\"80\" height=\"40\" as=\"geometry\"\/>      <\/mxCell>    <\/Setting>    <Display name=\"Default Display\" Note=\"\" Type=\"Time Series\" xAxis=\"Time (%u)\" yAxis=\"\" ThreeDimensional=\"false\" Primitives=\"23,24,25,29\" AutoAddPrimitives=\"true\" ScatterplotOrder=\"X Primitive, Y Primitive\" Image=\"Display\" yAxis2=\"\" Primitives2=\"\" showMarkers=\"false\" showLines=\"true\" showArea=\"false\" legendPosition=\"Automatic\" id=\"3\">      <mxCell style=\"roundImage;image=\/builder\/images\/DisplayFull.png;\" parent=\"1\" vertex=\"1\" visible=\"0\">        <mxGeometry x=\"50\" y=\"20\" width=\"64\" height=\"64\" as=\"geometry\"\/>      <\/mxCell>    <\/Display>    <Agents name=\"Population\" Note=\"\" Size=\"50\" GeoWrap=\"false\" GeoDimUnits=\"Unitless\" GeoWidth=\"200\" GeoHeight=\"100\" Placement=\"Random\" PlacementFunction=\"&lt;&lt;rand*width([Self]), rand*height([Self])&gt;&gt;\" Network=\"None\" NetworkFunction=\"randBoolean(0.02)\" Agent=\"28\" Image=\"None\" FlipHorizontal=\"false\" FlipVertical=\"false\" LabelPosition=\"Middle\" id=\"29\">      <mxCell style=\"agents\" vertex=\"1\" parent=\"1\">        <mxGeometry x=\"220\" y=\"180\" width=\"170\" height=\"80\" as=\"geometry\"\/>      <\/mxCell>    <\/Agents>  <\/root><\/mxGraphModel>"},"DIAGRAM","Letâ€™s make our agent based disease model from earlier more realistic. We will add a variable [Fraction Infected] that calculates what fraction of the population is currently infected. We will then use this variable to determine the infection rate so the more people in the population who are infected, the faster the disease will spread.",{"geometry":{"x":280,"y":90,"width":130,"height":50},"name":"Fraction Infected","create":"Variable"},{"geometry":{"x":0,"y":0,"width":100,"height":100},"alpha":"Population","omega":"Fraction Infected","create":"Link"},{"geometry":{"x":0,"y":0,"width":100,"height":100},"alpha":"Fraction Infected","omega":"Infection","create":"Link"},"DIAGRAM","Now let's configure the value of [Percent Infected] and change the [Infection ]transition to use it.",{"attribute":"Equation","target":"Fraction Infected","value":"Count(FindState([Population], [Infected]))/PopulationSize([Population])", "editor": true},"This equation uses the FindState function to select all the people in the [Population] who are in the Infected state. It then divides the number of those people by the total size of the population.",{"attribute":"Value","target":"Infection","value":"[Fraction Infected]"},{"attribute":"Primitives","target":"DISPLAY","value":["Population"]},"Now that we have set our infection probability to the value of the [Fraction Infected] primitive, we are ready to run the model.","RESULTS","That was a bit of a disappointment wasn't it? Nothing happened. Why is this?","Well since our infection rate now depends on the number of people who are infected we have to have at least one person infected to get the epidemic going. Let's change the [Healthy] and [Infected] states so one person starts in the infected state at the beginning of the simulation.",{"attribute":"Active","target":"Healthy","value":"Index([Self]) <> 1"},{"attribute":"Active","target":"Infected","value":"Index([Self]) == 1", "editor": true},"Each agent has an index starting with 1, we have set our initially active equations so the first agent in the population will start the simulation in the infected state. Let's run the model to see this working.","RESULTS","Each time we run the model we will get a different set of results. Sometimes the infection will die off after the first infected person recovers. Many other times an epidemic spread of the disease will occur.","RESULTS"]